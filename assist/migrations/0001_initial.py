# Generated by Django 3.2.4 on 2021-07-30 06:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('belong_web', models.BooleanField(default=False, verbose_name='属于Web')),
                ('belong_server', models.BooleanField(default=False, verbose_name='属于Server')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='组件名称')),
                ('detail', models.TextField(verbose_name='描述')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '组件',
                'verbose_name_plural': '组件',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('key', models.CharField(max_length=32, primary_key=True, serialize=False, unique=True, verbose_name='配置键')),
                ('value', models.JSONField(verbose_name='配置值')),
            ],
            options={
                'verbose_name': '配置',
                'verbose_name_plural': '配置',
            },
        ),
        migrations.CreateModel(
            name='NmapProbe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('directive_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='探针名称')),
                ('protocol', models.CharField(choices=[('TCP', 'TCP'), ('UDP', 'UDP')], max_length=32, verbose_name='探针协议')),
                ('directive_str', models.CharField(blank=True, max_length=2048, null=True, verbose_name='探针发送的报文')),
                ('total_wait_ms', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(1)], verbose_name='总超时')),
                ('tcp_wrapped_ms', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(1)], verbose_name='TCP')),
                ('rarity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(65535), django.core.validators.MinValueValidator(1)], verbose_name='优先级')),
                ('ports', models.CharField(blank=True, max_length=2048, null=True, verbose_name='端口')),
                ('ssl_ports', models.CharField(blank=True, max_length=2048, null=True, verbose_name='SSL端口')),
                ('fallback', models.CharField(blank=True, max_length=64, null=True, verbose_name='回朔到其他探针')),
            ],
            options={
                'verbose_name': 'Nmap探针',
                'verbose_name_plural': 'Nmap探针',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.JSONField(verbose_name='标签')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='assist.component', verbose_name='关联组件')),
            ],
        ),
        migrations.CreateModel(
            name='Plugins',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024, unique=True, verbose_name='插件名称')),
                ('for_type', models.CharField(choices=[('Web', 'Web'), ('Server', 'Server')], max_length=64, verbose_name='插件作用的类型,测试Web或者Server')),
                ('plugins_type', models.CharField(choices=[('.yaml', '.yaml'), ('.py', '.py')], max_length=64, verbose_name='插件的类型,Yaml或者Python')),
                ('description', models.CharField(max_length=128, verbose_name='描述')),
                ('code', models.TextField(max_length=204800, verbose_name='代码')),
                ('plugins_hash', models.CharField(blank=True, max_length=64, null=True, verbose_name='模块Hash')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('component', models.ManyToManyField(related_name='plugins_list', to='assist.Component', verbose_name='关联的组件')),
            ],
            options={
                'verbose_name': 'Web或者Server插件',
                'verbose_name_plural': 'Web或者Server插件',
            },
        ),
        migrations.CreateModel(
            name='NmapFingerPrint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern', models.CharField(max_length=2048, verbose_name='匹配规则')),
                ('version_info', models.CharField(max_length=2048, verbose_name='服务版本信息')),
                ('probe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='assist.nmapprobe')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nmap', to='assist.component')),
            ],
            options={
                'verbose_name': 'Nmap规则',
                'verbose_name_plural': 'Nmap规则',
            },
        ),
        migrations.CreateModel(
            name='WebFingerPrint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=1024, verbose_name='URL路径')),
                ('status_code', models.IntegerField(default=0, verbose_name='状态码')),
                ('headers', models.JSONField(null=True, verbose_name='请求头')),
                ('keyword', models.JSONField(max_length=1024, null=True, verbose_name='匹配关键词')),
                ('favicon_hash', models.CharField(blank=True, max_length=32, null=True, verbose_name='图标的哈希')),
                ('name', models.CharField(default=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fingerprint', to='assist.component', verbose_name='Web组件'), max_length=1024, verbose_name='组件名称')),
                ('web_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fingerprint', to='assist.component', verbose_name='Web组件')),
            ],
            options={
                'verbose_name': 'Web指纹',
                'verbose_name_plural': 'Web指纹',
                'unique_together': {('path', 'status_code', 'headers', 'keyword', 'favicon_hash')},
            },
        ),
    ]
